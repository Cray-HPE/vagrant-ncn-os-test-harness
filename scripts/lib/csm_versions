#!/bin/bash
#
# MIT License
#
# (C) Copyright 2022 Hewlett Packard Enterprise Development LP
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR
# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#

THIS_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
source $THIS_DIR/helper_functions

function get_latest_beta_version() {
  curl -f -s https://api.github.com/repos/Cray-HPE/csm/tags | jq -r 'limit(1; .[].name | select( . | contains("beta")))'
}

function get_release_branch_from_tag() {
  csm_tag=$1
  echo "Building image using CSM ${CSM_TAG}..."
  release_branch="release/$(echo $CSM_TAG | sed -nE 's/[v,V]([0-9]\.[0-9]).*/\1/p')"
  [[ $(echo $release_branch) == "release/1.4" ]] && release_branch=main
  echo $release_branch
}

function get_ncn_assets_url_for_tag() {
  csm_tag=$1
  csm_assets_url="https://raw.githubusercontent.com/Cray-HPE/csm/${csm_tag}/assets.sh"
  [[ $(curl -LI ${csm_assets_url} -o /dev/null -w '%{http_code}\n' -s) == "200" ]] || \
    exit_w_message "Please provide a valid CSM tag as the first argument. Refer to https://github.com/Cray-HPE/csm/tags"
  echo $csm_assets_url
}

function get_k8s_ncn_artifact_urls() {
  csm_tag=$1
  csm_assets_url=$(get_ncn_assets_url_for_tag $CSM_TAG)
  echo "Referencing image at CSM tag $csm_tag: $csm_assets_url"
  source /dev/stdin < <(curl -fsSL $csm_assets_url | grep -E -m 1 -A 4 "^KUBERNETES_ASSETS=\(+")
  export KUBERNETES_ASSETS
}

function get_box_url() {
  squashfs_url=$1
  box_url="$(basename $squashfs_url .squashfs)".box
  echo $box_url
}
